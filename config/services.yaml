version: "3.8"

services:
  # Orchestration
  airflow:
    image: apache/airflow
    version: 2.8.1
    ports: ["8080:8080"]
    command: > 
      bash -c "airflow db init && exec airflow webserver"
    environment:
      AIRFLOW__CORE__EXECUTOR: "CeleryExecutor"
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__WEBSERVER__SECRET_KEY: "{{GENERATE_32}}"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@airflow_postgres:5432/airflow"
      AIRFLOW__CELERY__BROKER_URL: "redis://:${REDIS_PASSWORD}@airflow_redis:6379/0"
    dependencies:
      postgres:
        image: postgres
        version: 16-alpine
        internal: true
        expose: 5432
        environment:
          POSTGRES_USER: "{{GENERATE_12}}"
          POSTGRES_PASSWORD: "{{GENERATE_24}}"
          POSTGRES_DB: "airflow"
      redis:
        image: redis
        version: 7.2-alpine
        internal: true
        expose: 6379
        environment:
          REDIS_PASSWORD: "{{GENERATE_24}}"

  # Databases / Key‑Value
  postgres:
    image: postgres
    version: 16-alpine
    ports: ["5432:5432"]
    environment:
      POSTGRES_USER: "{{GENERATE_12}}"
      POSTGRES_PASSWORD: "{{GENERATE_24}}"
      POSTGRES_DB: "airflow"

  redis:
    image: redis
    version: 7.2-alpine
    ports: ["6379:6379"]
    environment:
      REDIS_PASSWORD: "{{GENERATE_24}}"

  clickhouse:
    image: clickhouse/clickhouse-server
    version: 24.4
    ports: ["8123:8123"]
    expose: ["9000"]
    environment:
      CLICKHOUSE_DB: "default"

  minio:
    image: minio/minio
    version: latest
    ports: ["9000:9000","9001:9001"]
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: "{{GENERATE_16}}"
      MINIO_ROOT_PASSWORD: "{{GENERATE_32}}"

  # Streaming + Messaging
  zookeeper:
    image: confluentinc/cp-zookeeper
    version: latest
    ports: ["2181:2181"]
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: "2000"

  kafka:
    image: confluentinc/cp-kafka
    version: 7.3.0
    ports: ["9092:9092"]
    environment:
      KAFKA_BROKER_ID: "1"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
    depends_on:
      - zookeeper

  nifi:
    image: apache/nifi
    version: latest
    ports: ["8080:8080"]

  # Big‑Data Processing
  spark-master:
    image: bitnami/spark
    version: latest
    ports: ["7077:7077","8080:8080"]
    environment:
      SPARK_MODE: "master"

  spark-worker:
    image: bitnami/spark
    version: latest
    depends_on:
      - spark-master
    ports: ["8081:8081"]
    environment:
      SPARK_MODE: "worker"
      SPARK_MASTER_URL: "spark://spark-master:7077"

  flink-jobmanager:
    image: flink
    version: latest
    ports: ["8081:8089"]
    command: "jobmanager"

  flink-taskmanager:
    image: flink
    version: latest
    depends_on:
      - flink-jobmanager
    command: "taskmanager"

  # Orchestration & DAGs (already had Airflow), plus:
  dagster:
    image: dagster/dagster-k8s
    version: latest
    ports: ["3000:3000"]
    command: "dagster ui"
    environment:
      DAGSTER_HOME: "/opt/dagster"

  trino:
    image: trinodb/trino
    version: latest
    ports: ["8081:8081"]

  # Search & Analytics
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch
    version: 7.17.0
    ports: ["9200:9200"]
    environment:
      discovery.type: "single-node"

  kibana:
    image: docker.elastic.co/kibana/kibana
    version: 7.17.0
    ports: ["5601:5601"]
    depends_on:
      - elasticsearch

  # Visualization & Monitoring
  superset:
    image: apache/superset
    version: latest
    ports: ["8088:8088"]

  metabase:
    image: metabase/metabase
    version: latest
    ports: ["3001:3000"]

  grafana:
    image: grafana/grafana
    version: latest
    ports: ["3002:3000"]

  prometheus:
    image: prom/prometheus
    version: latest
    ports: ["9090:9090"]

volumes:
  minio_data:
